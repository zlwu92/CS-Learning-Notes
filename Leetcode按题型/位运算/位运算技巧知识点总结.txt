1. x & (x - 1) 用于消去x最后一位的1

2. 用 O(1) 时间检测整数 n 是否是 2 的幂次？
   因为N的二进制表示中只有一个1，所以使用N & (N - 1)将N唯一的一个1消去，应该返回0。

3. 计算在一个 32 位的整数的二进制表式中有多少个 1？
   不断使用 x & (x - 1) 消去x最后一位的1，计算总共消去了多少次即可。

4. 如果要将整数A转换为B，需要改变多少个bit位？
   转变成了计算 A ^ B 之后这个数中1的个数。

5. 使用二进制进行子集枚举 ==> 给定一个含不同整数的集合，返回其所有的子集。
   使用一个正整数二进制表示的第i位是1还是0，代表集合的第i个数取或者不取。

6. 检查数字x的二进制表示的第j位是否为1？
   if((x & (1 << j)) == 1)

7. a ^ b ^ b = a

8. 数组中，只有一个数出现一次，剩下都出现两次，找出出现一次的数
   for(auto a : arr)	res ^= a;

9. 数组中，只有一个数出现一次，剩下都出现三次，找出出现一次的数
   如果某一位上为1的话，那么如果该整数出现了三次，对3取余为0，
   这样把每个数的对应位都加起来对3取余，最终剩下来的那个数就是单独的数字。

10.数组中，只有两个数出现一次，剩下都出现两次，找出出现一次的数


11.判断一个整数是偶数还是奇数？ (num & 1) == 0 ? even : odd

12.判断一个整数是否是2的N次幂？ (num & (num - 1)) == 0 ? true : false

13.取当前 n 的最后一位：n & 1
   